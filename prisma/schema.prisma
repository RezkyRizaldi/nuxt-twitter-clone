// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  email         String
  name          String?
  username      String @unique
  password      String
  profileImage  String?
  refreshToken  RefreshToken[]
  tweet         Tweet[]
  mediaFiles     MediaFile[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RefreshToken {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  token   String @unique
  userId  String @db.ObjectId
  user    User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tweet {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  text        String
  authorId    String @db.ObjectId
  author      User @relation(fields: [authorId], references: [id])
  replyToId   String? @db.ObjectId
  replyTo     Tweet? @relation("replies", fields: [replyToId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  replies     Tweet[] @relation("replies")
  mediaFiles  MediaFile[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MediaFile {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  url               String
  providerPublicId  String
  userId            String @db.ObjectId
  user              User @relation(fields: [userId], references: [id])
  tweetId           String? @db.ObjectId
  tweet             Tweet? @relation(fields: [tweetId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}